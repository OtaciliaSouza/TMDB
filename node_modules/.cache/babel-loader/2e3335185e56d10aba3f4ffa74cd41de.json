{"ast":null,"code":"var _jsxFileName = \"/home/otacilia/case2/modulo6/promobit/src/Services/getMovies.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { createContext, useEffect, useState } from 'react';\nimport { BASE_GENRE_URL, BASE_URL, API_KEY } from '../Constants/base_url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviesContext = /*#__PURE__*/createContext([]);\nexport default function MoviesProvider(params) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    try {\n      axios.get(`${BASE_URL}popular?${API_KEY}&language=pt-BR&page=${page}`).then(response => setMovies(response.data.results));\n      axios.get(`${BASE_GENRE_URL}list?${API_KEY}&language=pt-BR`).then(response => setGenres(response.data.genres));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [page]);\n  useEffect(() => {\n    try {\n      let filteredMovies = [];\n      movies.forEach(movie => {\n        for (let filter of filters) {\n          if (movie.genre_ids.includes(filter)) {\n            filteredMovies = [...filteredMovies, movie];\n            break;\n          }\n        }\n      });\n      setFilteredMovies(filteredMovies);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [filters]);\n\n  function handleFilterGenres(genre) {\n    if (filters.includes(genre)) {\n      const index = filters.indexOf(genre);\n\n      if (index === 0) {\n        setFilters([...filters.slice(index + 1)]);\n      } else {\n        setFilters([...filters.slice(0, index), ...filters.slice(index + 1)]);\n      }\n    } else {\n      setFilters([...filters, genre]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(MoviesContext.Provider, {\n    value: {\n      genres,\n      movies,\n      filters,\n      filteredMovies,\n      setPage,\n      handleFilterGenres\n    },\n    children: params.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesProvider, \"vm7HyfgiuILW6GPEbCfnKPo4IBE=\");\n\n_c = MoviesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","BASE_GENRE_URL","BASE_URL","API_KEY","MoviesContext","MoviesProvider","params","movies","setMovies","genres","setGenres","filters","setFilters","filteredMovies","setFilteredMovies","page","setPage","get","then","response","data","results","error","console","log","forEach","movie","filter","genre_ids","includes","handleFilterGenres","genre","index","indexOf","slice","children"],"sources":["/home/otacilia/case2/modulo6/promobit/src/Services/getMovies.js"],"sourcesContent":["import axios from 'axios';\nimport { createContext, useEffect, useState } from 'react';\nimport { BASE_GENRE_URL, BASE_URL, API_KEY } from '../Constants/base_url';\n\nexport const MoviesContext = createContext([])\n\nexport default function MoviesProvider(params) {\n    const [movies, setMovies] = useState([])\n\n    const [genres, setGenres] = useState([])\n\n    const [filters, setFilters] = useState([])\n\n    const [filteredMovies, setFilteredMovies] = useState([])\n\n    const [page, setPage] = useState(1)\n\n    useEffect(() => {\n        try {\n            axios\n                .get(`${BASE_URL}popular?${API_KEY}&language=pt-BR&page=${page}`)\n                .then(response => setMovies(response.data.results))\n\n            axios\n                .get(`${BASE_GENRE_URL}list?${API_KEY}&language=pt-BR`)\n                .then(response => setGenres(response.data.genres))\n        } catch (error) {\n            console.log(error)\n        }\n    }, [page])\n\n    useEffect(() => {\n        try {\n            let filteredMovies = []\n\n            movies.forEach(movie => {\n                for (let filter of filters) {\n                    if (movie.genre_ids.includes(filter)) {\n                        filteredMovies = [...filteredMovies, movie]\n                        break\n                    }\n                }\n            })\n            setFilteredMovies(filteredMovies)\n        } catch (error) {\n            console.log(error)\n        }\n    }, [filters])\n\n    function handleFilterGenres(genre) {\n        if (filters.includes(genre)) {\n            const index = filters.indexOf(genre)\n\n            if (index === 0) {\n                setFilters([...filters.slice(index + 1)])\n            } else {\n                setFilters([...filters.slice(0, index), ...filters.slice(index + 1)])\n            }\n        } else {\n            setFilters([...filters, genre])\n        }\n    }\n\n    return (\n        <MoviesContext.Provider\n            value={{\n                genres,\n                movies,\n                filters,\n                filteredMovies,\n                setPage,\n                handleFilterGenres\n            }}\n        >\n            {params.children}\n        </MoviesContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}